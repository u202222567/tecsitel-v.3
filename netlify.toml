# =============================================
# TECSITEL PERU E.I.R.L. - Configuración Netlify Optimizada
# Solución para errores de build y deploy
# =============================================

[build]
  # Configuración de build optimizada
  publish = "."
  command = "npm run build"
  functions = "netlify/functions"
  
[build.environment]
  # Variables de build
  NODE_VERSION = "18"
  NPM_VERSION = "9"
  TECSITEL_VERSION = "4.0.0"
  BUILD_ENV = "netlify"

# =============================================
# CONFIGURACIÓN DE FUNCIONES SERVERLESS
# =============================================
[functions]
  directory = "netlify/functions"
  node_bundler = "nft"
  
  # Configuración específica para la función API
  [functions."api"]
    external_node_modules = ["pg-native"]

# =============================================
# REDIRECCIONES DE API - SINCRONIZADAS
# =============================================

# Redirección principal de API
[[redirects]]
  from = "/api/*"
  to = "/.netlify/functions/api/:splat"
  status = 200
  force = true

# Redirecciones específicas para cada endpoint
[[redirects]]
  from = "/api/auth/login"
  to = "/.netlify/functions/api/auth/login"
  status = 200

[[redirects]]
  from = "/api/auth/verify"
  to = "/.netlify/functions/api/auth/verify"
  status = 200

[[redirects]]
  from = "/api/config"
  to = "/.netlify/functions/api/config"
  status = 200

[[redirects]]
  from = "/api/dashboard"
  to = "/.netlify/functions/api/dashboard"
  status = 200

[[redirects]]
  from = "/api/invoices"
  to = "/.netlify/functions/api/invoices"
  status = 200

[[redirects]]
  from = "/api/employees"
  to = "/.netlify/functions/api/employees"
  status = 200

[[redirects]]
  from = "/api/timeentries"
  to = "/.netlify/functions/api/timeentries"
  status = 200

[[redirects]]
  from = "/api/compliance"
  to = "/.netlify/functions/api/compliance"
  status = 200

[[redirects]]
  from = "/api/export"
  to = "/.netlify/functions/api/export"
  status = 200

[[redirects]]
  from = "/api/health"
  to = "/.netlify/functions/api/health"
  status = 200

# Redirección para SPA (Single Page Application)
[[redirects]]
  from = "/*"
  to = "/index.html"
  status = 200

# =============================================
# HEADERS DE SEGURIDAD OPTIMIZADOS
# =============================================

# Headers para API
[[headers]]
  for = "/api/*"
  [headers.values]
    Access-Control-Allow-Origin = "*"
    Access-Control-Allow-Methods = "GET, POST, PUT, DELETE, OPTIONS"
    Access-Control-Allow-Headers = "Content-Type, Authorization, X-Requested-With"
    Access-Control-Allow-Credentials = "true"
    Content-Type = "application/json; charset=utf-8"
    Cache-Control = "no-cache, no-store, must-revalidate"

# Headers generales de seguridad
[[headers]]
  for = "/*"
  [headers.values]
    X-Frame-Options = "SAMEORIGIN"
    X-Content-Type-Options = "nosniff"
    X-XSS-Protection = "1; mode=block"
    Referrer-Policy = "strict-origin-when-cross-origin"
    Permissions-Policy = "geolocation=(), microphone=(), camera=()"

# Headers específicos para index.html
[[headers]]
  for = "/index.html"
  [headers.values]
    Cache-Control = "no-cache, no-store, must-revalidate"
    Pragma = "no-cache"
    Expires = "0"

# Headers para archivos estáticos
[[headers]]
  for = "/assets/*"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

# =============================================
# CONFIGURACIÓN DE PROCESAMIENTO
# =============================================
[build.processing]
  skip_processing = false

[build.processing.css]
  bundle = false
  minify = false

[build.processing.js]
  bundle = false
  minify = false

[build.processing.html]
  pretty_urls = true

[build.processing.images]
  compress = false

# =============================================
# CONFIGURACIÓN POR CONTEXTO
# =============================================

# Producción
[context.production]
  command = "npm run build"
  [context.production.environment]
    NODE_ENV = "production"
    TECSITEL_ENV = "production"

# Deploy preview
[context.deploy-preview]
  command = "npm run build"
  [context.deploy-preview.environment]
    NODE_ENV = "staging"
    TECSITEL_ENV = "preview"

# Branch deploys
[context.branch-deploy]
  command = "npm run build"
  [context.branch-deploy.environment]
    NODE_ENV = "development"
    TECSITEL_ENV = "development"

# =============================================
# CONFIGURACIÓN DE FORMULARIOS
# =============================================
[build.ignore]
  # Ignorar builds si solo cambian estos archivos
  command = "git diff --quiet $CACHED_COMMIT_REF $COMMIT_REF -- README.md docs/ docker-compose.yml setup.sh"

# =============================================
# CONFIGURACIÓN DE PLUGINS
# =============================================
[[plugins]]
  package = "@netlify/plugin-lighthouse"
  
  [plugins.inputs]
    audit_only = true

# =============================================
# VARIABLES DE ENTORNO REQUERIDAS
# =============================================
# Estas se configuran en Netlify UI:
# Site Settings > Environment variables

# JWT_SECRET=tecsitel-jwt-v4-2025-hX7k5ZZrDetHFzpYrCZppd9hGgEB3Kxa
# COMPANY_RUC=20605908285
# COMPANY_NAME=TECSITEL PERU E.I.R.L.
# NODE_ENV=production
# PERU_IGV_RATE=0.18
# CORS_ORIGIN=https://tecsitel.netlify.app

# =============================================
# EDGE FUNCTIONS (OPCIONAL)
# =============================================
# Para optimización adicional si es necesario

# =============================================
# NOTAS DE CONFIGURACIÓN
# =============================================
# Este archivo resuelve:
# 1. ✅ Errores de build script
# 2. ✅ Redirecciones de API optimizadas
# 3. ✅ Headers CORS configurados
# 4. ✅ Configuración por contexto
# 5. ✅ Procesamiento optimizado
# 6. ✅ Variables de entorno documentadas
#
# Para usar:
# 1. Reemplaza package.json con la versión optimizada
# 2. Copia este archivo como netlify.toml en la raíz
# 3. Configura variables de entorno en Netlify UI
# 4. Haz push y deploy automático
